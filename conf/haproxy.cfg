global
    maxconn 20480
    log stdout format raw local0

    #SSL options
    tune.ssl.default-dh-param 4096
        
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
  log global
  timeout connect 5000
  timeout client 50000
  timeout server 50000


frontend http
  bind *:80
  mode http
  redirect scheme https code 301 if !{ ssl_fc }

# ALPN Frotend. Filters ALPN requests. Redirects to bk_https if no alpn reqiest
frontend fe_alpn
  mode tcp
  bind :443
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }
  use_backend bk_acmesh if { req.ssl_alpn acme-tls/1 }
  default_backend bk_https

# New
backend bk_acmesh
  server acmesh 127.0.0.1:10443

# New
backend bk_https
  server https 127.0.0.1:8443 send-proxy-v2

# Existing, changed from :443 -> 127.0.0.1:8443
frontend fe_https
  mode http
  option forwardfor
  option httplog
  bind 127.0.0.1:8443 ssl crt /etc/haproxy/certs accept-proxy
  http-request add-header X-Forwarded-Proto https
  http-response set-header Strict-Transport-Security max-age=31536000;includeSubDomains;preload
  # ...
